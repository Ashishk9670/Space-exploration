{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"puh",
				"push_back"
			],
			[
				"prin",
				"printAllTopOrder"
			],
			[
				"top",
				"topological_sort_recursive"
			],
			[
				"bit",
				"bitCount"
			],
			[
				"max",
				"max_platform"
			],
			[
				"pus",
				"push"
			],
			[
				"mn",
				"mn_chef"
			],
			[
				"lo",
				"lengthOfLongestBitonicSubsequence"
			],
			[
				"ed",
				"endl"
			],
			[
				"r",
				"rotated"
			],
			[
				"sear",
				"searachINRotatedSortedArray"
			],
			[
				"co",
				"countOfOCcurence"
			],
			[
				"lef",
				"firstLeftIndex"
			],
			[
				"fi",
				"firstLeftIndex"
			],
			[
				"End",
				"endl"
			],
			[
				"mar",
				"matrix_median"
			],
			[
				"part",
				"partitonList"
			],
			[
				"les",
				"lesserHead"
			],
			[
				"grea",
				"greaterHead"
			],
			[
				"nex",
				"nextNode"
			],
			[
				"lese",
				"lesserTail"
			],
			[
				"lea",
				"lesserTail"
			],
			[
				"sq",
				"sq_Node"
			],
			[
				"fra",
				"fracNode"
			],
			[
				"modular",
				"modularNode"
			],
			[
				"modularn",
				"modularNodeFromStart"
			],
			[
				"seg",
				"segregateEvenOddValues"
			],
			[
				"od",
				"oddHead"
			],
			[
				"eve",
				"evenTail"
			],
			[
				"evn",
				"evenTail"
			],
			[
				"dele",
				"delete"
			],
			[
				"te",
				"temp"
			],
			[
				"new",
				"newnode"
			],
			[
				"re",
				"rearrange"
			],
			[
				"midd",
				"middleOfLinkList"
			],
			[
				"reve",
				"reverse_ll_in_pairs_iteraticve"
			],
			[
				"ll",
				"ll_is_evenNodes_oddNodes"
			],
			[
				"in",
				"insert_node_InSortedLL"
			],
			[
				"kt",
				"find_kth_node_From_end"
			],
			[
				"count",
				"countNodes"
			],
			[
				"st",
				"starting_point_of_loop"
			],
			[
				"en",
				"endl"
			],
			[
				"no",
				"noOfNodesInLoop"
			],
			[
				"print",
				"printLinklist"
			],
			[
				"hea",
				"head"
			],
			[
				"cu",
				"cur1"
			],
			[
				"cur",
				"cur2"
			],
			[
				"link",
				"LinkListNode"
			],
			[
				"lis",
				"LinkListNode"
			],
			[
				"p",
				"printLinklist"
			],
			[
				"de",
				"delete_duplicate_From_soreted"
			],
			[
				"to",
				"to_del"
			],
			[
				"dlete",
				"delete"
			],
			[
				"del",
				"deleteLL"
			],
			[
				"lin",
				"LinkListNode"
			],
			[
				"pre",
				"prices"
			],
			[
				"pri",
				"prices"
			],
			[
				"pr",
				"prices"
			],
			[
				"so",
				"solveUsingXor"
			],
			[
				"cn",
				"cur_cnt"
			],
			[
				"des",
				"desX"
			],
			[
				"sr",
				"srcX"
			],
			[
				"fl",
				"false"
			],
			[
				"pop",
				"pop_back"
			],
			[
				"int",
				"intialize"
			],
			[
				"ro",
				"root"
			],
			[
				"le",
				"levelOfEachNode"
			],
			[
				"dep",
				"depthOfTree"
			],
			[
				"rt",
				"rt_right"
			],
			[
				"do",
				"doubleLLToBST"
			],
			[
				"is",
				"isFoldable"
			],
			[
				"isfld",
				"isFoldable_helper"
			],
			[
				"find",
				"findCountPath_helper"
			],
			[
				"path",
				"pathsum"
			],
			[
				"pah",
				"path"
			],
			[
				"cout",
				"countPath"
			],
			[
				"seq",
				"sequence_finding_int_Path"
			],
			[
				"sum",
				"sumOfNoFormedByrootToLeavesNodes"
			],
			[
				"all",
				"allpath"
			],
			[
				"psu",
				"push"
			],
			[
				"bou",
				"boundaryTraversal"
			],
			[
				"push",
				"push_back"
			],
			[
				"lev",
				"levelSum"
			],
			[
				"levels",
				"levelSize"
			],
			[
				"c",
				"curr"
			],
			[
				"leve",
				"levelSize"
			],
			[
				"level",
				"levelsize"
			],
			[
				"sec",
				"second"
			],
			[
				"fe",
				"findLevelWithMaxSum"
			],
			[
				"pat",
				"findPathWithGivenSum"
			],
			[
				"ha",
				"halfNodes"
			],
			[
				"ful",
				"fullNodes"
			],
			[
				"I",
				"INT_MIN"
			],
			[
				"rig",
				"right"
			],
			[
				"math",
				"maxPathSum"
			],
			[
				"INT_M",
				"INT_MIN"
			],
			[
				"N",
				"NULL"
			],
			[
				"righ",
				"right"
			],
			[
				"ne",
				"nextInorderval"
			],
			[
				"INT_",
				"INT_MAX"
			],
			[
				"tere",
				"TreeNode"
			],
			[
				"roo",
				"root"
			],
			[
				"rot",
				"root"
			],
			[
				"firs",
				"firstMIn"
			],
			[
				"se",
				"secondMIn"
			],
			[
				"bo",
				"bottomView"
			],
			[
				"diao",
				"diagonalTraversal"
			],
			[
				"dia",
				"diagonalRecursivehelper"
			],
			[
				"digonal",
				"diagonalRecursiveTraversal"
			],
			[
				"r_p",
				"r_preE"
			],
			[
				"r_pr",
				"r_preS"
			],
			[
				"r_",
				"r_inE"
			],
			[
				"r_in",
				"r_inS"
			],
			[
				"l_",
				"l_preE"
			],
			[
				"l_pre",
				"l_preE"
			],
			[
				"l",
				"l_preS"
			],
			[
				"he",
				"helperForBst"
			],
			[
				"diam",
				"diameter"
			],
			[
				"end",
				"endl"
			],
			[
				"up_",
				"up_index"
			],
			[
				"tree",
				"TreeNode"
			],
			[
				"v",
				"val"
			],
			[
				"right",
				"right"
			],
			[
				"lc",
				"lcm_arr"
			],
			[
				"En",
				"endl"
			],
			[
				"min",
				"minLen"
			],
			[
				"left",
				"leftCount"
			],
			[
				"usi",
				"usingBS"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"emmet",
				"Toggle Comment"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"nstall Package ",
				"Package Control: Install Package"
			],
			[
				"nstall Package Control",
				"Install Package Control"
			],
			[
				"run",
				"Build With: C++ Single File - Run"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 288.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/E/dev++/recursion_all_subset_for_array_with_duplicates.cpp",
		"/E/dev++/backtracking_printAllSubset.cpp",
		"/E/dev++/allSubset.cpp",
		"/E/dev++/cf_71A.cpp",
		"/E/dev++/cf_1391A.cpp",
		"/E/dev++/heap_merge_k_sorted_list.cpp",
		"/E/dev++/cf_aug_lc2020_card_game.cpp",
		"/E/dev++/tcs_minimise_sum.cpp",
		"/E/dev++/tcs_count_pairs.cpp",
		"/E/dev++/tcs_travel.cpp",
		"/E/dev++/tcs_prime_time.cpp",
		"/E/dev++/tcs_geek.cpp",
		"/E/dev++/tcs_max_prize.cpp",
		"/E/dev++/candy.cpp",
		"/E/dev++/tcs_min_gift.cpp",
		"/E/dev++/tcs_constellation.cpp",
		"/E/dev++/platfrom.cpp",
		"/E/dev++/balancesdParenthesis.cpp",
		"/E/dev++/cf_aug_lc2020_chefwars.cpp",
		"/E/dev++/cf_aug_lc2020_chess.cpp",
		"/E/dev++/dp_longest_bitonic_subsequence.cpp",
		"/E/dev++/dp_longest_valid_parentheisi.cpp",
		"/E/dev++/dp_max_sum_without_adjacent_elements.cpp",
		"/E/dev++/backtracking_palindrome_partitioning.cpp",
		"/E/dev++/bs_find_element.cpp",
		"/E/dev++/bs_infinitely_sorted_array.cpp",
		"/E/dev++/bs_findFirstLast.cpp",
		"/E/dev++/bs_matrix_median.cpp",
		"/E/dev++/faang_merge_intervals.cpp",
		"/E/dev++/medianOf2ArrayBinarSearch.cpp",
		"/E/dev++/dp_tsp.cpp",
		"/E/dev++/dp_matrix_chain_multipli.cpp",
		"/E/dev++/dp_matrix_chain_parenthesisi.cpp",
		"/E/dev++/matrix cahin mut.cpp",
		"/E/dev++/faang_sort_0_1_2.cpp",
		"/E/dev++/matrix_print.cpp",
		"/E/dev++/happy_number.cpp",
		"/E/dev++/g_dijkstra.cpp",
		"/E/dev++/ll_interview.cpp",
		"/E/dev++/cf_1154A.cpp",
		"/E/dev++/cf_750A.cpp",
		"/E/dev++/cf_1343B.cpp",
		"/E/dev++/cf_732A.cpp",
		"/E/dev++/linked list.cpp",
		"/E/dev++/ll_reversing.cpp",
		"/E/dev++/cf_112A.cpp",
		"/E/dev++/cf_281A.cpp",
		"/E/dev++/cf_236A.cpp",
		"/E/dev++/cf_339A.cpp",
		"/E/dev++/g_floyd_warshell_new.cpp",
		"/E/dev++/g_shorteest_path_all_algos.cpp",
		"/E/dev++/g_bellman_ford_new.cpp",
		"/E/dev++/g_bellmanFord_complete.cpp",
		"/E/dev++/g_bellman_ford_adjaceny matrix.cpp",
		"/E/dev++/cf_lunchtime_july20-Binary_concat.cpp",
		"/E/dev++/fanng_find_duplicate_no.cpp",
		"/E/dev++/g_no_of_connected_componenets.cpp",
		"/E/dev++/gs_codesprint_trader_profit.cpp",
		"/E/dev++/faang_find_the_missing_and_repeating.cpp",
		"/E/dev++/g_flood_fill.cpp",
		"/E/dev++/he_aug_easy_vaccine.cpp",
		"/E/dev++/dp_lcs.cpp",
		"/E/dev++/gs_codesprint_stocks.cpp",
		"/E/dev++/cf_640A.cpp",
		"/E/dev++/cf_148A.cpp",
		"/E/dev++/cf_472_evey_no_sum_of_2composte_no.cpp",
		"/E/dev++/cf_A_level.cpp",
		"/E/dev++/g_no_of_islands.cpp",
		"/E/dev++/g_dfs.cpp",
		"/E/dev++/graph.cpp",
		"/E/dev++/faang_max_in_window.cpp",
		"/E/dev++/faang_nearest_smaller_element.cpp",
		"/E/dev++/g_prims_algo.cpp",
		"/E/dev++/g_kruskals.cpp",
		"/E/dev++/g_kruskals_ref_programiz.cpp",
		"/E/dev++/cf_1389A.cpp",
		"/E/dev++/graph_all.cpp",
		"/E/dev++/sievePrime.cpp",
		"/E/dev++/fenwick_tree.cpp",
		"/E/dev++/cf_1382B.cpp",
		"/E/dev++/cf_1382A.cpp",
		"/E/dev++/stack_balanced_parenthesis.cpp",
		"/E/dev++/cf_655_B.cpp",
		"/E/dev++/cf_655_A.cpp",
		"/E/dev++/cf_lunchtime_july20_matrx.cpp",
		"/E/dev++/cf_lunchtime_july20_chef_steps.cpp",
		"/E/dev++/cf656_B.cpp",
		"/E/dev++/segmentree_referencerce.cpp",
		"/E/dev++/two_pointer_find_pair_with _sum_in_2_sorted_array.cpp",
		"/E/dev++/segment_tree_range_min_spoj.cpp",
		"/E/dev++/tcsm2_swamvyar.cpp",
		"/E/dev++/hashing_len_substring_with_sum_zero.cpp",
		"/E/dev++/hashing_valid_sudoko.cpp",
		"/E/dev++/cc_15july_2.cpp",
		"/E/dev++/cc_15july_1.cpp",
		"/E/dev++/hashing_subarray_with_sum_zero.cpp",
		"/E/dev++/hashing_subarray_with_given_odd_no.cpp",
		"/E/dev++/hashin_subarray_xor.cpp",
		"/E/dev++/hashing_pair_with_xor.cpp",
		"/E/dev++/hashing_diffII.cpp",
		"/E/dev++/hashing_max_points_on_line.cpp",
		"/E/dev++/cc_july20_lc_missing_point.cpp",
		"/E/dev++/hashing_minimum_substring_containing_pattern.cpp",
		"/E/dev++/hashing_fraction.cpp",
		"/E/dev++/hashing_colorful_no.cpp",
		"/E/dev++/cc_july20_lc_ada_king.cpp",
		"/E/dev++/greedy_maximum_product_of_3_no.cpp",
		"/E/dev++/greedy_IB_bulbs.cpp",
		"/E/dev++/greedy_job_scheduling.cpp",
		"/E/dev++/hashing_anagrams.cpp",
		"/E/dev++/hashing_two_sum.cpp",
		"/E/dev++/longest_subtring_without_repeating_char.cpp",
		"/E/dev++/cc_july20_lc_chef_and_strings.cpp",
		"/E/dev++/greedy_IB_seats.cpp",
		"/E/dev++/cf_gr9_B.cpp",
		"/E/dev++/cf_gr9_C.cpp",
		"/E/dev++/cf_gr9_A.cpp",
		"/E/dev++/greedy_assign _micle_to_holes.cpp",
		"/E/dev++/greedy_minimum_platform.cpp",
		"/E/dev++/greedy_minimum_range_of_towers.cpp",
		"/E/dev++/greedy_minimum_towers.cpp",
		"/E/dev++/greedy_fractional_knapsack.cpp",
		"/E/dev++/greedy_huffman_coding.cpp",
		"/E/dev++/hashing/longest_subtring_without_repeating_char.cpp",
		"/E/dev++/heaps and maps/heap_implementation.cpp",
		"/E/dev++/heaps and maps/heap_magician_chocolate.cpp",
		"/E/dev++/heaps and maps/heap_Minimum Number of Refueling Stops.cpp",
		"/E/dev++/heaps and maps/heap_sort.cpp"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "index.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\dev++\\output.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
